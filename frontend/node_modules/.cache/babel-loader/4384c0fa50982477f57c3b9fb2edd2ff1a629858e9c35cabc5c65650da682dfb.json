{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { createCategoria, updateCategoria, getCategoriaById } from '../api';\nexport default {\n  __name: 'CategoriaForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const nome = ref('');\n    const isEditing = ref(false);\n    onMounted(async () => {\n      if (route.params.id) {\n        isEditing.value = true;\n        try {\n          const response = await getCategoriaById(route.params.id);\n          nome.value = response.data.nome;\n        } catch (error) {\n          console.error('Erro ao carregar categoria:', error);\n        }\n      }\n    });\n    const handleSubmit = async () => {\n      try {\n        if (isEditing.value) {\n          await updateCategoria(route.params.id, {\n            nome: nome.value\n          });\n        } else {\n          await createCategoria({\n            nome: nome.value\n          });\n        }\n        router.push('/categorias');\n      } catch (error) {\n        console.error('Erro ao salvar categoria:', error);\n        // Adicione aqui a l칩gica para mostrar uma mensagem de erro ao usu치rio\n      }\n    };\n    const __returned__ = {\n      route,\n      router,\n      nome,\n      isEditing,\n      handleSubmit,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get createCategoria() {\n        return createCategoria;\n      },\n      get updateCategoria() {\n        return updateCategoria;\n      },\n      get getCategoriaById() {\n        return getCategoriaById;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","useRouter","createCategoria","updateCategoria","getCategoriaById","route","router","nome","isEditing","params","id","value","response","data","error","console","handleSubmit","push"],"sources":["/home/lobo/Desktop/KODE/bringel2/frontend/src/components/CategoriaForm.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\n    <div class=\"max-w-md w-full space-y-8 bg-gray-800 p-10 rounded-xl shadow-lg mx-auto\">\n      <div>\n        <h2 class=\"mt-6 text-center text-3xl font-extrabold text-white\">\n          {{ isEditing ? 'Editar Categoria' : 'Cadastrar Nova Categoria' }}\n        </h2>\n      </div>\n      <form class=\"mt-8 space-y-6\" @submit.prevent=\"handleSubmit\">\n        <div>\n          <label for=\"nome\" class=\"sr-only\">Nome da Categoria</label>\n          <input id=\"nome\" name=\"nome\" type=\"text\" required\n            class=\"appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n            placeholder=\"Nome da Categoria\" v-model=\"nome\">\n        </div>\n        <div>\n          <button type=\"submit\"\n            class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n            {{ isEditing ? 'Atualizar' : 'Cadastrar' }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { createCategoria, updateCategoria, getCategoriaById } from '../api'\n\nconst route = useRoute()\nconst router = useRouter()\nconst nome = ref('')\nconst isEditing = ref(false)\n\nonMounted(async () => {\n  if (route.params.id) {\n    isEditing.value = true\n    try {\n      const response = await getCategoriaById(route.params.id)\n      nome.value = response.data.nome\n    } catch (error) {\n      console.error('Erro ao carregar categoria:', error)\n    }\n  }\n})\n\nconst handleSubmit = async () => {\n  try {\n    if (isEditing.value) {\n      await updateCategoria(route.params.id, { nome: nome.value })\n    } else {\n      await createCategoria({ nome: nome.value })\n    }\n    router.push('/categorias')\n  } catch (error) {\n    console.error('Erro ao salvar categoria:', error)\n    // Adicione aqui a l칩gica para mostrar uma mensagem de erro ao usu치rio\n  }\n}\n</script>\n\n"],"mappings":";AA2BA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAW;AAC/C,SAASC,eAAe,EAAEC,eAAe,EAAEC,gBAAgB,QAAQ,QAAO;;;;;;;IAE1E,MAAMC,KAAK,GAAGL,QAAQ,CAAC;IACvB,MAAMM,MAAM,GAAGL,SAAS,CAAC;IACzB,MAAMM,IAAI,GAAGT,GAAG,CAAC,EAAE;IACnB,MAAMU,SAAS,GAAGV,GAAG,CAAC,KAAK;IAE3BC,SAAS,CAAC,YAAY;MACpB,IAAIM,KAAK,CAACI,MAAM,CAACC,EAAE,EAAE;QACnBF,SAAS,CAACG,KAAK,GAAG,IAAG;QACrB,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMR,gBAAgB,CAACC,KAAK,CAACI,MAAM,CAACC,EAAE;UACvDH,IAAI,CAACI,KAAK,GAAGC,QAAQ,CAACC,IAAI,CAACN,IAAG;QAChC,CAAC,CAAC,OAAOO,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK;QACpD;MACF;IACF,CAAC;IAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,IAAIR,SAAS,CAACG,KAAK,EAAE;UACnB,MAAMR,eAAe,CAACE,KAAK,CAACI,MAAM,CAACC,EAAE,EAAE;YAAEH,IAAI,EAAEA,IAAI,CAACI;UAAM,CAAC;QAC7D,CAAC,MAAM;UACL,MAAMT,eAAe,CAAC;YAAEK,IAAI,EAAEA,IAAI,CAACI;UAAM,CAAC;QAC5C;QACAL,MAAM,CAACW,IAAI,CAAC,aAAa;MAC3B,CAAC,CAAC,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK;QAChD;MACF;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}