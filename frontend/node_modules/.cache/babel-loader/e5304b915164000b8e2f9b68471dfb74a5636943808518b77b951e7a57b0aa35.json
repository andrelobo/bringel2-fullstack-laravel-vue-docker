{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { login } from '../api';\nexport default {\n  __name: 'LoginForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const email = ref('');\n    const password = ref('');\n    const errorMessage = ref('');\n    const router = useRouter();\n    const handleLogin = async () => {\n      try {\n        const response = await login(email.value, password.value);\n        const token = response.data.access_token;\n\n        // Salvar o token no localStorage\n        localStorage.setItem('token', token);\n\n        // Redirecionar para o componente de Categorias\n        router.push('/categorias');\n      } catch (error) {\n        console.error('Erro no login:', error);\n        errorMessage.value = 'E-mail ou senha incorretos. Tente novamente.';\n      }\n    };\n    const __returned__ = {\n      email,\n      password,\n      errorMessage,\n      router,\n      handleLogin,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get login() {\n        return login;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","login","email","password","errorMessage","router","handleLogin","response","value","token","data","access_token","localStorage","setItem","push","error","console"],"sources":["/home/lobo/Desktop/KODE/bringel2/frontend/src/components/LoginForm.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex items-center justify-center bg-gray-900\">\n    <div class=\"max-w-md w-full space-y-8 bg-gray-800 p-10 rounded-xl shadow-lg\">\n      <div>\n        <h2 class=\"mt-6 text-center text-3xl font-extrabold text-white\">\n          Faça login na sua conta\n        </h2>\n      </div>\n      <form class=\"mt-8 space-y-6\" @submit.prevent=\"handleLogin\">\n        <div class=\"rounded-md shadow-sm -space-y-px\">\n          <div>\n            <label for=\"email\" class=\"sr-only\">E-mail</label>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              required\n              class=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n              placeholder=\"E-mail\"\n              v-model=\"email\"\n            />\n          </div>\n          <div>\n            <label for=\"password\" class=\"sr-only\">Senha</label>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              autocomplete=\"current-password\"\n              required\n              class=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n              placeholder=\"Senha\"\n              v-model=\"password\"\n            />\n          </div>\n        </div>\n        <div>\n          <button\n            type=\"submit\"\n            class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Entrar\n          </button>\n        </div>\n        <p v-if=\"errorMessage\" class=\"text-red-500 text-sm text-center mt-2\">\n          {{ errorMessage }}\n        </p>\n      </form>\n      <div class=\"text-center\">\n        <router-link to=\"/register\" class=\"font-medium text-indigo-600 hover:text-indigo-500\">\n          Não tem uma conta? Registre-se\n        </router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { login } from '../api'\n\nconst email = ref('')\nconst password = ref('')\nconst errorMessage = ref('')\nconst router = useRouter()\n\nconst handleLogin = async () => {\n  try {\n    const response = await login(email.value, password.value)\n    const token = response.data.access_token\n\n    // Salvar o token no localStorage\n    localStorage.setItem('token', token)\n\n    // Redirecionar para o componente de Categorias\n    router.push('/categorias')\n  } catch (error) {\n    console.error('Erro no login:', error)\n    errorMessage.value = 'E-mail ou senha incorretos. Tente novamente.'\n  }\n}\n</script>\n"],"mappings":";AA0DA,SAASA,GAAG,QAAQ,KAAI;AACxB,SAASC,SAAS,QAAQ,YAAW;AACrC,SAASC,KAAK,QAAQ,QAAO;;;;;;;IAE7B,MAAMC,KAAK,GAAGH,GAAG,CAAC,EAAE;IACpB,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,EAAE;IACvB,MAAMK,YAAY,GAAGL,GAAG,CAAC,EAAE;IAC3B,MAAMM,MAAM,GAAGL,SAAS,CAAC;IAEzB,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACC,KAAK,CAACM,KAAK,EAAEL,QAAQ,CAACK,KAAK;QACxD,MAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACC,YAAW;;QAEvC;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK;;QAEnC;QACAJ,MAAM,CAACS,IAAI,CAAC,aAAa;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK;QACrCX,YAAY,CAACI,KAAK,GAAG,8CAA6C;MACpE;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}